/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { styled } from '@mui/material/styles';
import AccordionsHelpersTop from './AccordionsHelpersTop';
import AccordionsHelpersContent from './AccordionsHelpersContent';
import { AccordionsAccordionProps } from './types';
import useAccordionsAccordion from './useAccordionsAccordion';
 
const IndentFalseSizeSmall: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `400px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const AccordionsHelpersTop1: any = styled(AccordionsHelpersTop)(({ theme }: any) =>({  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const AccordionsHelpersCon: any = styled(AccordionsHelpersContent)(({ theme }: any) =>({  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
 
function AccordionsAccordion(props: AccordionsAccordionProps): JSX.Element {
  const {data, fns} = useAccordionsAccordion();
  return (
    <IndentFalseSizeSmall >
       <AccordionsHelpersTop1   onClick={fns.onAccordionClick} state={data.state} title={props.title}/>
       {(data.state === 'expanded') &&
           <AccordionsHelpersCon   state={data.state} content={props.content}/>
       }
     </IndentFalseSizeSmall>
   );
}

export default AccordionsAccordion;
