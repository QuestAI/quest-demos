/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import ArrowUpImage from './assets/images/arrow_up.png';
import ArrowDownImage from './assets/images/arrow_down.png';
import { styled } from '@mui/material/styles';
import { AccordionsHelpersTopProps } from './types';
import useAccordionsHelpersTop from './useAccordionsHelpersTop';
 
const StateCollapsedIconRi: any = styled("div", {
    shouldForwardProp: prop => !["props", "data"].includes(prop.toString())
  })(({ theme, props, data }: any) =>({  
  backgroundColor: props.state !== 'expanded' && data.isHovered ? `rgba(245, 245, 245, 1)` : `rgba(255, 255, 255, 1)`,  
  boxShadow: props.state === 'expanded' ? "unset" : `inset 0px -1px 0px rgba(0, 0, 0, 0.08)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `400px`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `8px`,  
  boxSizing: `border-box`,  
  cursor: `pointer`,  
}));
  
const Department: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `SF Pro Text`,  
  fontWeight: `500`,  
  fontSize: `12px`,  
  letterSpacing: `-0.24px`,  
  textDecoration: `none`,  
  lineHeight: `16px`,  
  textTransform: `none`,  
  flexGrow: `1`,  
  margin: `0px`,  
}));
  
const ArrowUp: any = styled("img")({  
  height: `16px`,  
  width: `16px`,  
  margin: `0px 0px 0px 8px`,  
});
  
const ArrowDown: any = styled("img")({  
  height: `16px`,  
  width: `16px`,  
  margin: `0px 0px 0px 8px`,  
});
 
function AccordionsHelpersTop(props: AccordionsHelpersTopProps): JSX.Element {
  const {data, fns} = useAccordionsHelpersTop();
  return (
    <StateCollapsedIconRi onClick={props.onClick} onMouseOver={fns.onMouseOver} onMouseOut={fns.onMouseOut} props={props} data={data} >
       <Department >
         {props.title}
           </Department>
       {((props.state === 'expanded')) &&
           <ArrowUp  src={ArrowUpImage} alt={"arrow up"}/>
       }
       {(!(props.state === 'expanded')) &&
           <ArrowDown  src={ArrowDownImage} alt={"arrow down"}/>
       }
     </StateCollapsedIconRi>
   );
}

export default AccordionsHelpersTop;
